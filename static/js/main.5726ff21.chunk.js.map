{"version":3,"sources":["NavElement/NavElement.js","Navbar/Navbar.js","Footer/Footer.js","CompanyInfo/CompanyInfo.js","News/News.js","Quote/Quote.js","NotFoundError/NotFoundError.js","App.js","serviceWorker.js","index.js"],"names":["NavElement","props","className","id","active","onClick","e","index","name","icon","color","Navbar","useState","currentIndex","setCurrentIndex","onNavChange","elements","map","element","key","Footer","href","CompanyInfo","company","CEO","address","city","country","securityName","employees","exchange","industry","website","state","sector","issueType","description","News","news","url","title","source","headline","Quote","quote","latestPrice","avgTotalVolume","latestTime","TOKEN","token","App","data","setData","update","setUpdate","invalidSymbol","setInvalidSymbol","document","paths","navIndex","setNavIndex","NavElements","faComments","faNewspaper","faIndustry","Load","symbol","path","a","fetch","response","json","newData","console","error","onSearch","text","useEffect","placeholder","onChange","onEnter","onSearchClick","searchText","classNames","NotFoundError","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5726ff21.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default function NavElement(props) {\r\n\r\n    function handleClick(e){\r\n        props.onClick && props.onClick(props.index, props.name);\r\n    }\r\n\r\n    return(\r\n        <div className={props.className ? props.className:\"Nav-element\"} id={props.active}onClick={handleClick}>\r\n            { props.icon && <FontAwesomeIcon className=\"Nav-icon\" icon={props.icon} color=\"green\" /> }\r\n            <h1 className=\"Nav-text\">{props.name}</h1>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport NavElement from '../NavElement/NavElement';\r\n\r\nexport default function Navbar(props) {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n    function onClick(index, name) {\r\n        if(currentIndex !== index && props.onNavChange) {\r\n            props.onNavChange(index, name);\r\n        }\r\n        setCurrentIndex(index);\r\n    }\r\n\r\n    return(\r\n        <div className=\"Navbar\">\r\n            <NavElement name=\"Fintech\" className=\"Title\"></NavElement>\r\n            {props && props.elements.map((element, index) => (\r\n                <NavElement key={element.name} active={currentIndex === index ? \"Active\" : \"Inactive\"}\r\n                name={element.name} icon={element.icon} onClick={onClick} index={index}></NavElement>\r\n            ))}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <a href=\"https://iexcloud.io\">Data provided by IEX Cloud</a>\r\n        </footer>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function CompanyInfo(props) {\r\n\r\n    return(\r\n        <div className=\"Section\">\r\n            <h2>CEO: {props.company.CEO}</h2>\r\n            <h2>Address: {props.company.address}</h2>\r\n            <h2>City: {props.company.city}</h2>\r\n            <h2>Country: {props.company.country}</h2>\r\n            <h2>Name: {props.company.securityName}</h2>\r\n            <h2>Employee Count: {props.company.employees}</h2>\r\n            <h2>Exchange: {props.company.exchange}</h2>\r\n            <h2>Industry: {props.company.industry}</h2>\r\n            <h2>Website: {props.company.website}</h2>\r\n            <h2>State: {props.company.state}</h2>\r\n            <h2>Sector: {props.company.sector}</h2>\r\n            <h2>Issue Type: {props.company.issueType}</h2>\r\n            <h2>Description: {props.company.description}</h2>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function News(props){\r\n\r\n    return(\r\n        <div className=\"Section\">\r\n            {\r\n                props.news.map((news, index) =>\r\n                    <a key={ index } href={ news.url } title={ news.source }><h2>{ news.headline }</h2></a>\r\n                )}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Quote(props) {\r\n    \r\n    return(\r\n        <div className=\"Section\">\r\n            <h2>Price: ${props.quote.latestPrice}</h2>\r\n            <h2>Volume: {props.quote.avgTotalVolume}</h2>\r\n            <h2>Time: {props.quote.latestTime}</h2>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nexport default function() {\r\n\r\n    return(\r\n        <div className=\"Error\">\r\n            <h2>Could not find this symbol, check https://iextrading.com/trading/eligible-symbols/ for a list of\r\n                appropriate symbols.\r\n            </h2>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\nimport SearchField from \"react-search-field\";\nimport Navbar from './Navbar/Navbar';\nimport Footer from './Footer/Footer';\nimport CompanyInfo from './CompanyInfo/CompanyInfo';\nimport News from './News/News';\nimport Quote from './Quote/Quote';\nimport NotFoundError from './NotFoundError/NotFoundError';\nimport { faComments, faNewspaper, faIndustry } from '@fortawesome/free-solid-svg-icons'\nimport { token } from './token';\nimport './App.css';\n\nconst TITLE = 'Financial Overview';\nconst TOKEN = token;\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [update, setUpdate] = useState(true);\n  const [invalidSymbol, setInvalidSymbol] = useState(false);\n  document.title = TITLE;\n  const paths = ['quote', 'news/last', 'company'];\n  const [navIndex, setNavIndex] = useState(0);\n\n  const NavElements = [\n    {\n      name: 'Quote',\n      icon: faComments\n    },\n    {\n      name: 'News',\n      icon: faNewspaper\n    },\n    {\n      name: 'Info',\n      icon: faIndustry\n    },\n  ];\n\n  async function Load(symbol, path) {\n    try {\n      const response = await fetch(`https://cloud.iexapis.com/stable/stock/${symbol}/${paths[path]}?token=${TOKEN}&format=json`);\n      const json = await response.json();\n      data[path] = json;\n      const newData = [...data];\n      setData(newData);\n      setUpdate(false);\n      setInvalidSymbol(false);\n    } catch(error) {\n      setInvalidSymbol(true);\n      console.error(error);\n    }\n  }\n\n  function onSearch(text) {\n    paths.map((path, index) =>\n        Load(text, index)\n      );\n  }\n\n  function onNavChange(index, name) {\n    setNavIndex(index);\n  }\n\n  function onChange(text) {\n    \n  }\n\n  function onEnter(text) {\n    onSearch(text);\n  }\n\n  function onSearchClick(text) {\n    onSearch(text);\n  }\n\n  useEffect(() => {\n    if(update) {\n      paths.map((path, index) =>\n        Load('AAPL', index)\n      );\n    }\n  });\n  \n  return(\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar elements={NavElements} onNavChange={onNavChange}></Navbar>\n        <div className=\"App-Body\">\n          <SearchField\n            placeholder=\"Search...\"\n            onChange={onChange}\n            onEnter={onEnter}\n            onSearchClick={onSearchClick}\n            searchText=\"AAPL\"\n            classNames=\"Searchbar\"\n          />\n          {invalidSymbol && <NotFoundError></NotFoundError>}\n          {navIndex === 0 && data[0] && <Quote quote={data[0]}></Quote>}\n          {navIndex === 1 && data[1] && <News news={data[1]}></News>}\n          {navIndex === 2 && data[2] && <CompanyInfo company={data[2]}></CompanyInfo>}\n        </div>\n      </header>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}